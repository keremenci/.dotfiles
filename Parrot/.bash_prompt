#!/bin/bash
#
# DESCRIPTION:
#
#   Set the bash prompt according to:
#    * the active virtualenv
#    * the branch of the current git/mercurial repository
#    * the return value of the previous command
#    * the fact you just came from Windows and are used to having newlines in
#      your prompts.
#
# USAGE:
#
#   1. Save this file as ~/.bash_prompt
#   2. Add the following line to the end of your ~/.bashrc or ~/.bash_profile:
#        . ~/.bash_prompt
#

# The various escape codes that we can use to color our prompt.
RED="\[\033[0;31m\]"
YELLOW="\[\033[1;33m\]"
GREEN="\[\033[0;32m\]"
BLUE="\[\033[1;94m\]"
PURPLE="\[\033[0;35m\]"
LIGHT_RED="\[\033[1;31m\]"
LIGHT_GREEN="\[\033[1;32m\]"
WHITE="\[\033[1;97m\]"
LIGHT_GRAY="\[\033[0;37m\]"
ORANGE="\[\e[38;5;208m\]"
COLOR_NONE="\[\e[0m\]"


# Variables
SEP="${RED}]\342\224\200["
IP=$(ifconfig eth0 | grep "inet " | cut -d " " -f 10)

# determine git branch name
function parse_git_branch() {
    git branch 2>/dev/null | sed -e '/^[^*]/d' -e 'sâœ—/* \(.*\)/\1/'
}

# Determine the branch/state information for this git repository.

function set_git_branch() {

    if [ ! -d ".git" ]; then
        BRANCH=""
    else
        # Get the name of the branch.
        branch=$(parse_git_branch)

        # Set the final branch string.
        BRANCH="${PURPLE}${branch}${SEP}${COLOR_NONE}"
    fi
}

# Return the prompt symbol to use, colorized based on the return value of the
# previous command.
function set_prompt_symbol() {
    if test $1 -eq 0; then
        PROMPT_SYMBOL="\$"
    else
        PROMPT_SYMBOL="${LIGHT_RED}$? ${ORANGE}\$${COLOR_NONE}"
    fi
}

# Determine active Python virtualenv details.
function set_virtualenv() {
    if test -z "$VIRTUAL_ENV"; then
        PYTHON_VIRTUALENV=""
    else
        PYTHON_VIRTUALENV="${YELLOW}$(basename "$VIRTUAL_ENV")${SEP}${COLOR_NONE}"
    fi
}

# Set the full bash prompt.
function set_bash_prompt() {
    # Set the PROMPT_SYMBOL variable. We do this first so we don't lose the
    # return value of the last command.
    set_prompt_symbol $?

    # Set the PYTHON_VIRTUALENV variable.
    set_virtualenv

    # Set the BRANCH variable.
    set_git_branch

    # Set the bash prompt variable.
    #PS1="\[\033[0;31m\]\342\224\214\342\224\200$([[ $? != 0 ]] && echo "[\[\033[0;31m\]\342\234\227\[\033[0;37m\]]\342\224\200")[\[\033[1;97m\]\u\[\033[01;33m\]@\[\033[1;94m\]\h\[\033[01;33m\]\[\033[0;31m\]]\342\224\200\[\033[0;31m\][\[\033[1;97m\]"$IP"\[\033[0;31m\]]\342\224\200[\[\033[1;94m\]\w\[\033[0;31m\]]\n\[\033[0;31m\]\342\224\224\342\224\200\342\224\200\342\225\274 \[\033[0m\]\[\e[01;33m\]\$\[\e[0m\]"
    PS1="${RED}\342\224\214\342\224\200$([[ $? != 0 ]] && echo "${RED}\342\234\227${LIGHT_GRAY}]\342\224\200")[${WHITE}\u${YELLOW}@${BLUE}\h${YELLOW}${SEP}${WHITE}${IP}${SEP}${BRANCH}${PYTHON_VIRTUALENV}${BLUE}\w${RED}]\n${RED}\342\224\224\342\224\200\342\224\200\342\225\274 \[\033[0m\]\[\e[01;33m\]${PROMPT_SYMBOL}\[\e[0m\]"
}

# Tell bash to execute this function just before displaying its prompt.
PROMPT_COMMAND=set_bash_prompt
